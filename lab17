#include <iostream>

using namespace std;

int main()
{

    int n,count = 0, s = 0;
    cout << "Enter size: ";
    cin >> n;

    int *arr = new int[n];

    for(int i = 0; i < n; i++){
        cout << "Enter element: ";
        cin >> arr[i];
    }

    for(int i = 0; i < n - 1; i++){
        while(arr[i] == arr[i + 1]) i++;
        count++;
    }
    if(arr[n - 2] != arr[n - 1]) count++;

    int *b = new int[count];
    int *c = new int[count];

    for(int i = 0; i < count; i++){
        b[i] = 0;
    }

    for(int i = 0, j = 0; i < n - 1; i++, j++){
        c[j] = arr[i];
        while(arr[i] == arr[i + 1]) {
            s++;
            i++;
        }
        b[j] = s;
    }
    if(arr[n - 2] != arr[n - 1]){
         b[count - 1] = arr[n - 1];
         c[count - 1] = 1;
     }

    return 0;
}







#include <iostream>

using namespace std;

int main()
{

    int n, k, count = 0, last_start, k_start, last_length = 0, k_length = 0;
    cout << "Enter size: ";
    cin >> n;

    cout << "Enter K: ";
    cin >> k;

    int *a = new int[n];

    for(int i = 0; i < n; i++){
        cout << "Enter element: ";
        cin >> a[i];
    }

    for(int i = 0; i < n - 1; i++){
        if(a[i] == a[i + 1]){
            count++;
            last_length = 0;
            last_start = i;
            if(count == k) k_start = i;
            while(a[i] == a[i + 1]) {
                if(count == k) k_length++;
                else last_length++;
                i++;
            }
        }
    }

    int *b = new int[n];

    for(int i = 0, x = 0; i < n; i++, x++){
        if(x != k_start) b[i] = a[x];
        else {
            for(int j = last_start; j <= last_start + last_length; j++){
                b[i] = a[j]; i++;
            }
            x += k_length; i--;
        }
        if(x == last_start){
            for(int j = k_start; j <= k_start + k_length; j++){
                b[i] = a[j]; i++;
            }
            x += last_length;
            i--;
        }
    }

    for(int i = 0; i < n; i++){
        cout << "Element: " << b[i] << endl;
    }

    return 0;
}






#include <iostream>

using namespace std;

int main()
{

    int n, l, count = 0;
    cout << "Enter size: ";
    cin >> n;

    cout << "Enter L: ";
    cin >> l;

    int *a = new int[n];

    for(int i = 0; i < n; i++){
        cout << "Enter element: ";
        cin >> a[i];
    }

    for(int i = 0; i < n - 1; i++){
        int k = 1;
        while(a[i] == a[i + 1]) {
            k++; i++;
        }
        if(k > l) count++;
        else count += k;
    }
    if(a[n - 1] != a[n - 2]) count++;

    cout << count << endl;

    int *b = new int[count];

    for(int i = 0, j = 0; i < n - 1; i++, j++){
        int k = 1;
        while(a[i] == a[i + 1]) {
            k++; i++;
        }
        if(k > l) {
            b[j] = 0;
        }
        else {
            for(int x = j; x < j + k; x++)
                b[x] = a[i];
            j += k - 1;
        }
    }
    if(a[n - 1] != a[n - 2]) b[count - 1] = a[n - 1];

    for(int i = 0; i < count; i++){
        cout << "Element: " << b[i] << endl;
    }

    return 0;
}





#include <iostream>
#include <cmath>

using namespace std;

int main()
{

    int n;
    double max_x = 0, max_y = 0;
    cout << "Enter size: ";
    cin >> n;

    double **a = new double*[n];

    for(int i = 0; i < n; i++){
        a[i] = new double[2];
    }

    for(int i = 0; i < n; i++){
        cout << "Enter coords: ";
        cin >> a[i][0] >> a[i][1];
    }

    double max = 0;
    for(int i = 0; i < n; i++){
        if(a[i][0] < 0 && a[i][1] > 0){
            if(max < sqrt(a[i][0]*a[i][0] + a[i][1]*a[i][1])){
                max = sqrt(a[i][0]*a[i][0] + a[i][1]*a[i][1]);
                max_x = a[i][0]; max_y = a[i][1];
             }
        }
    }

    cout << "Coords: " << max_x << ' ' << max_y;

    return 0;
}




#include <iostream>
#include <cmath>

using namespace std;

int main()
{

    int n;
    double max_x1 = 0, max_y1 = 0, max_x2 = 0, max_y2 = 0, max_x3 = 0, max_y3 = 0;
    cout << "Enter size: ";
    cin >> n;

    double **a = new double*[n];

    for(int i = 0; i < n; i++){
        a[i] = new double[2];
    }

    for(int i = 0; i < n; i++){
        cout << "Enter coords: ";
        cin >> a[i][0] >> a[i][1];
    }

    double max_p = 0;
    for(int i = 0; i < n - 2; i++){
        for(int j = i + 1; j < n - 1; j++){
            for(int k = j + 1; k < n; k++){
                if(a[i][0] != a[j][0] && a[i][1] != a[j][1] && a[i][0] != a[k][0] && a[i][1] != a[k][1] && a[j][0] != a[k][0] && a[j][1] != a[k][1]){
                    if(sqrt(a[i][0]*a[i][0] + a[i][1]*a[i][1]) + sqrt(a[j][0]*a[j][0] + a[j][1]*a[j][1]) + sqrt(a[k][0]*a[k][0] + a[k][1]*a[k][1]) > max_p){
                        max_p = sqrt(a[i][0]*a[i][0] + a[i][1]*a[i][1]) + sqrt(a[j][0]*a[j][0] + a[j][1]*a[j][1]) + sqrt(a[k][0]*a[k][0] + a[k][1]*a[k][1]);
                        max_x1 = a[i][0]; max_y1 = a[i][1];
                        max_x2 = a[j][0]; max_y2 = a[j][1];
                        max_x3 = a[k][0]; max_y3 = a[k][1];
                    }
                }
            }
        }
    }

    cout << "Coords: " << max_x1 << ' ' << max_y1 << "; " << max_x2 << ' ' << max_y2 << "; " << max_x3 << ' ' << max_y3;

    return 0;
}
            
        
    
}
