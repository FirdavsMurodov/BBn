#include <iostream>

using namespace std;

int main()
{

    int m;
    cout << "Enter size: ";
    cin >> m;

    int **a = new int*[m];
    for(int i = 0; i < m; i++)
        a[i] = new int[m];

    for(int i = 0; i < m; i++){
        cout << "Enter elements of " << i << " string" << endl;
        for(int j = 0; j < m; j++){
            cout << "Enter element: ";
            cin >> a[i][j];
        }
    }

    for(int i = 0; i < m / 2; i++){
        for(int j = i; j < m - i; j++){
            cout << a[j][i] << ' ';
        }
        cout << endl;
        for(int j = i; j < m - i; j++){
            cout << a[m - i - 1][j] << ' ';
        }
        cout << endl;
        for(int j = m - i - 1; j >= i; j--){
            cout << a[j][m - i - 1] << ' ';
        }
        cout << endl;
        for(int j = m - i - 1; j >= i; j--){
            cout << a[i][j] << ' ';
        }
        cout << endl;
    }
    cout << a[m / 2][m / 2];

    return 0;
}




#include <iostream>

using namespace std;

int main()
{

    int n, m, k, sum = 0, comp = 1;
    cout << "Enter size(m * n): ";
    cin >> m >> n;

    cout << "Enter k: ";
    cin >> k;

    int **a = new int*[m];
    for(int i = 0; i < m; i++)
        a[i] = new int[n];

    for(int i = 0; i < m; i++){
        cout << "Enter elements of " << i << " string" << endl;
        for(int j = 0; j < n; j++){
            cout << "Enter element: ";
            cin >> a[i][j];
        }
    }

    for(int i = 0; i < n; i++){
        sum += a[k - 1][i];
        comp *= a[k - 1][i];
    }

    cout << "Sum: " << sum << endl << "Comp: " << comp;

    return 0;
}





#include <iostream>

using namespace std;

int main()
{

    int n, m;
    cout << "Enter size(m * n): ";
    cin >> m >> n;

    int **a = new int*[m];
    for(int i = 0; i < m; i++)
        a[i] = new int[n];

    for(int i = 0; i < m; i++){
        cout << "Enter elements of " << i << " string" << endl;
        for(int j = 0; j < n; j++){
            cout << "Enter element: ";
            cin >> a[i][j];
        }
    }

    int *b = new int[n];

    for(int i = 0; i < n; i++){
        b[i] = 1;
        for(int j = 0; j < m; j++){
            b[i] *= a[j][i];
        }
    }
    int min_i = 0;
    for(int i = 1; i < n; i++){
        min_i = b[min_i] > b[i] ? i : min_i;
    }

    cout << "Minimal: " << min_i + 1<< endl << "Min comp: " << b[min_i];

    return 0;
}



#include <iostream>

using namespace std;

int main()
{

    int n, m;
    cout << "Enter size(m * n): ";
    cin >> m >> n;

    int **a = new int*[m];
    for(int i = 0; i < m; i++)
        a[i] = new int[n];

    for(int i = 0; i < m; i++){
        cout << "Enter elements of " << i << " string" << endl;
        for(int j = 0; j < n; j++){
            cout << "Enter element: ";
            cin >> a[i][j];
        }
    }

    int *medium = new int[n];
    int *count = new int[n];
    for(int i = 0; i < n; i++){
        medium[i] = 0;
        for(int j = 0; j < m; j++){
            medium[i] += a[j][i];
        }
        medium[i] /= m;
    }
    for(int i = 0; i < n; i++){
        count[i] = 0;
        for(int j = 0; j < m; j++){
            if(a[j][i] > medium[i]){
                count[i]++;
            }
        }
    }

    for(int i = 0; i < n; i++){
        cout << "Count of elements in " << i + 1 << " coluumn: " << count[i] << endl;
    }

    return 0;
}




#include <iostream>

using namespace std;

int main()
{

    int n, m;
    cout << "Enter size(m * n): ";
    cin >> m >> n;

    int **a = new int*[m];
    for(int i = 0; i < m; i++)
        a[i] = new int[n];

    for(int i = 0; i < m; i++){
        cout << "Enter elements of " << i << " string" << endl;
        for(int j = 0; j < n; j++){
            cout << "Enter element: ";
            cin >> a[i][j];
        }
    }
    bool percent = false;
    int column = 0;
    for(int i = 0; i < n; i++){
        percent = false;
        for(int j = 0; j < m; j++){
            if(a[j][i] % 2 == 1){
                percent = true;
                break;
            }
        }
        if(percent == true){
            column = i + 1;
            break;;
        }
    }

    cout << "Coolumn: " << column;

    return 0;
}
